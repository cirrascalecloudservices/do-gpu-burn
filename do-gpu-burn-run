#!/bin/bash -eux
set -o pipefail
shopt -s inherit_errexit

rmmod nouveau || true

# https://docs.nvidia.com/datacenter/tesla/tesla-installation-notes/index.html#runfile
apt-get install build-essential linux-headers-$(uname -r) -y
sh $(basename $(curl -s -w "%{url_effective}" https://us.download.nvidia.com/tesla/535.104.12/NVIDIA-Linux-x86_64-535.104.12.run -O)) -s

env
find . -maxdepth 1 -ls
find $DOWNLOAD_PATH -maxdepth 1 -ls
df -h

rmmod nouveau || true

nvidia-smi

arch=$(uname -m) # e.g,. x86_64
distro=ubuntu$(. /etc/os-release; echo $VERSION_ID | tr -d .) # e.g., ubuntu2004
apt-get install ./$(basename $(curl -s -w "%{url_effective}" https://developer.download.nvidia.com/compute/cuda/repos/$distro/$arch/cuda-keyring_1.0-1_all.deb -O)) -y
apt-get update -y
apt-get install cuda-toolkit -y

# gpu-burn
git clone https://github.com/wilicc/gpu-burn && cd gpu-burn && make && ./gpu_burn







# packages:
#  url: https://us.download.nvidia.com/tesla/535.104.12/NVIDIA-Linux-x86_64-535.104.12.run

# root@GPUDF04:~/gpu-burn# history
#     1  . /etc/os-release
#     2  arch=$(uname -m)
#     3  distro=ubuntu$(echo $VERSION_ID | tr -d .)
#     4  dpkg -i $(basename $(curl -s -w "%{url_effective}" https://developer.download.nvidia.com/compute/cuda/repos/$distro/$arch/cuda-keyring_1.0-1_all.deb -O)) && apt-get update -y
#     5  rmmod nouveau 
#     6  apt install cuda
#     7  nvidia-smi
#     8  git clone https://github.com/wilicc/gpu-burn
#     9  cd gpu-burn/
#    10  ll
#    11  make
#    12  ll
#    13  ./gpu_burn 
#    14  echo $?
#    15  history
